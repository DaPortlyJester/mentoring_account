name: terraform_validate
on:
  push:
    branches:
      - "main"
  pull_request: {}
jobs:
  terraform_check:
    name: "lint (terraform check)"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8
      - id: format_check
        run: terraform fmt -check -recursive
  terraform_validate:
    permissions:
      id-token: 'write'
      contents: 'read'
    name: "[${{ matrix.directory }}] validate (terraform validate & plan)"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        directory: ['variables/global']
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: handle_race_condition
        run: sleep 5
      - name: configure aws
        run: |
          export AWS_ROLE_ARN=arn:aws:iam::493994275831:role/oidc/github_actions_oidc_role
          export AWS_WEB_IDENTITY_TOKEN_FILE=/tmp/awscreds
          export AWS_DEFAULT_REGION=us-east-1

          echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
          echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
          echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV

          echo TOKEN_REQUEST_URL=$ACTIONS_ID_TOKEN_REQUEST_URL >> $GITHUB_ENV

          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

      # use for diagnosis
      # - name: dump env
      #   run: env
      - name: setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8
      - id: init
        run: terraform -chdir=${{ matrix.directory }} init
      - id: validate
        run: terraform -chdir=${{ matrix.directory }} validate
      - id: plan
        run: terraform -chdir=${{ matrix.directory }} plan -no-color -out=tfplan
  tfsec:
    name: "security (tfsec)"
    runs-on: ubuntu-latest
    needs: terraform_validate
    strategy:
      fail-fast: true
      matrix:
        directory: ['variables/global']
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: tfsec security scan
        uses: tfsec/tfsec-sarif-action@v0.0.6
        with:
          working_directory: ${{ matrix.directory }}
          sarif_file: tfsec.sarif
      - name: upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the working directory
          sarif_file: tfsec.sarif
